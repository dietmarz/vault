#!/bin/bash
set -eu

git_ops() {
    local env_var_name=$1
    local commit_msg=$2

    # Check if the environment variable is set and not empty
    if [[ -z ${!env_var_name:-} ]]; then
        echo "Environment variable $env_var_name is not set. Skipping..."
        return 1
    fi

    local dir=${!env_var_name}

    # Check if the directory exists
    if [[ ! -d $dir ]]; then
        echo "Directory $dir (from $env_var_name) does not exist. Skipping..."
        return 2
    fi

    # Change to the specified directory
    cd $dir

    echo "========================= ${dir} git operations ========================= "

    echo "------------------------- ${dir} rebasing -------------------------"
    if ! git pull --rebase --autostash; then
        echo "Es gab einen Konflikt beim Versuch, Änderungen zu pullen/rebasen in $dir."
        echo "Bitte lösen Sie den Konflikt manuell."
        exit 3
    fi

    git status -s

    # Check if there are changes to be committed
    if [[ $(git status --porcelain) ]]; then
        git add .
        git commit -m "$commit_msg"
    else
        echo "No changes to commit for $dir"
    fi

    echo "------------------------- ${dir} pushing -------------------------"
    git push

    git status -s
}

# Check if ENV_VAULT is set and not empty
if [[ -n ${ENV_VAULT:-} ]]; then
    echo "------------------------- vault formatting -------------------------"
    if ! ${ENV_VAULT}/kh/util/bin/format-adoc.sh; then
        echo "Vault formatting failed. Aborting script."
        exit 4
    fi

    if [[ -n ${ENV_SKIP_VALIDATION:-} ]]; then
        echo "------------------------- vault validation SKIPPED! ----------------"
    else
        echo "------------------------- vault validation -------------------------"
        if ! ${ENV_VAULT}/kh/util/bin/t "v"; then
            echo "Validation failed. Aborting script."
            exit 5
        fi
    fi

    echo "------------------------- vault encryption -------------------------"
    if ! ${ENV_VAULT}/kh/util/bin/t "e"; then
        echo "Encryption failed. Aborting script."
        exit 6
    fi

    # Call the function for vault
    git_ops ENV_VAULT "Update vault by sv"
fi

# Call the function for office and kh
git_ops ENV_OFFICE "Update office by sv"

return 0